{"cells": [{"cell_type": "markdown", "metadata": {}, "source": ["# Exercise 6.2: Writing your own segmentation function\n", "\n", "<hr>"]}, {"cell_type": "markdown", "metadata": {}, "source": ["As you probably noticed during the previous two lessons, there are often a lot of small operations that are sometimes necessary before you can even extract the useful data from the image! Rather than writing out each step whenever you want to process an image, you should write a boilerplate function that can be used to segment *any* phase contrast image of bacteria. Your function should execute the following steps.\n", "\n", ">1. Correct for \"hot\" or \"bad\" pixels in an image. \n", "2. Correct for uneven illumination. \n", "3. Perform a thresholding operation.\n", "4. Remove bacteria or objects near/touching the image border. \n", "5. Remove objects that are too large (or too small) to be bacteria. Think carefully! For a multipurpose function, would you *always* want the same area cutoff?\n", "6. Remove improperly segmented cells.\n", "7. Return a labeled segmentation mask. \n", "\n", "A set of discrete operations like this is called a **pipeline**. It is usefull to think of image processing, or data processing for that matter, as a pipeline consisting of successive steps. This helps codify how you are extracting conclusions from your data and improves reproducibility.\n", "\n", "After putting your pipeline into a function, run the pipeline on both the *Bacillus subtilis* ([Lesson 44](l44_intro_to_image_processing.ipynb)) and the *E. coli* [Lesson 45](l45_segmentation.ipynb) image sets. Does your function work well in both cases? Note that in both of these image sets, the interpixel distance is 0.0626 \u00b5m per pixel. "]}], "metadata": {"anaconda-cloud": {}, "kernelspec": {"display_name": "Python 3 (ipykernel)", "language": "python", "name": "python3"}, "language_info": {"codemirror_mode": {"name": "ipython", "version": 3}, "file_extension": ".py", "mimetype": "text/x-python", "name": "python", "nbconvert_exporter": "python", "pygments_lexer": "ipython3", "version": "3.9.12"}}, "nbformat": 4, "nbformat_minor": 4}