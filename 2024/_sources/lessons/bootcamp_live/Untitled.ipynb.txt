{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "61bc3f6a-870a-4903-a5df-c120add940d2",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_list = [1, 2, 3, 4]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "9468b95a-6692-4825-8dde-823ea531f79b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "list"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "type(my_list)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "b7fab275-9ab5-4eba-833d-11404b96f1d8",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_list = [1, 2.4, 'a string', ['a string in another list', 5]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "6f3772ff-c06d-47bf-a860-6a5b515a0e65",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[5, 15, 16]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list = [2 + 3, 5 * 3, 4**2]\n",
    "\n",
    "my_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "fe9c81ff-ecbf-4f2b-a4ac-5d25d3db9ab2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "42"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "int('42')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "fbc51335-b5fe-45cd-90bc-1abe1fc02841",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['a', ' ', 's', 't', 'r', 'i', 'n', 'g']"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list('a string')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "e3b449d9-277b-45db-bf60-d440d6918950",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2, 3, 4, 5, 6]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "[1, 2, 3] + [4, 5, 6] "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "3b665855-9e00-4eb4-a6a5-6a6fb4cf5920",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2, 3, 1, 2, 3, 1, 2, 3]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "[1, 2, 3] * 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "010ef92b-fa37-48cd-a784-680e90de0cc6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[5, 15, 16]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "30b6dc71-73bf-43b9-bc17-16ca54cb14cc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "15 in my_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "735ff7a5-b11d-4a28-ba1f-bd70e97a1641",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'jeffrey lebowski' not in my_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "65755e75-be34-4f72-a333-6f8c505190c8",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_list = [1, 2.4, 'a string', ['a string in another list', 5]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "c8f09808-828d-4c21-9040-c854aad64562",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2.4, 'a string', ['a string in another list', 5]]"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "1c0cdfb0-5b8b-4361-b40a-1c91011ecbed",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "['a string in another list', 5] in my_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "f4962ab0-4b4c-49a2-a5fc-ab1fe9e922d5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "This codon is a stop codon.\n"
     ]
    }
   ],
   "source": [
    "codon = 'UAA'\n",
    "\n",
    "if codon == 'AUG':\n",
    "    print('This codon is the start codon.')\n",
    "elif codon in ('UAA', 'UAG', 'UGA'):\n",
    "    print('This codon is a stop codon.')\n",
    "else:\n",
    "    print('This codon is neither a start nor stop codon.')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "e1f9fb88-9f0d-4e1a-834b-842c1cbc0d33",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2.4, 'a string', ['a string in another list', 5]]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "f9dfa49b-6a6f-414b-872d-67bc015f6646",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'a string'"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list[2]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "60db5f5f-605f-4684-9296-57948133cef0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[1, 2.4, 'a string', ['a string in another list', 5]]"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "1ab50364-b2cb-493d-8e7d-f3063ef4fafb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list[3][1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "52960b27-9415-4e39-9824-35de067be06d",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_list = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "a649fc66-50f5-466a-bfd8-eee2a11d6b75",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list[4]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "35517bda-ce6e-40e4-b217-833fa52373b7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "c3de8081-c330-4d34-bee0-2ae7a5a56985",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "49cd38ec-615b-4721-8c01-4d37125ada27",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[9, 7, 5, 3]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list[-2:2:-2]   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "49dd5809-ce1b-4360-bc98-27d645ab9047",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_slice = my_list[1:7:-3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "1d7f98d9-d3d0-42b6-a628-bff1fcd07c97",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "e02cc9ba-0b04-4508-91b1-0d8df34c7dfb",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_list[4] = 'four'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "bf6bab8c-111d-4219-a8b3-ff2baaf0e34a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0, 1, 2, 3, 'four', 5, 6, 7, 8, 9, 10]"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "eaae8e68-d031-4345-af11-14a9d66a5476",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_list = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n",
    "my_list2 = my_list\n",
    "\n",
    "my_list2[0] = 'a'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "94ab0c98-5a4f-427b-a5e0-c8f2e44fd733",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['a', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "497d6aba-3c41-4b3e-ace3-637741d8048f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['a', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "d09c3dbb-62cc-41ae-bbad-40864beb7a7e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list is my_list2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "3c6d3742-e3a8-40a3-92c2-8d480b1b63cf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "7"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a = 5\n",
    "b = 7\n",
    "a = b\n",
    "\n",
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "771f206d-f33b-4f45-937d-5322124cd217",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_tuple = (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "d77ccc15-5f15-4629-bba2-5ad96b7682b4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)"
      ]
     },
     "execution_count": 63,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_tuple"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "1613cc56-5faf-421d-b76a-b16a6898fde3",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_tuple2 = my_tuple"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "7cf257da-bea8-4ccd-b59d-19e5c015ea1d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_tuple2 is my_tuple"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "43892cb6-658e-4ecf-89e6-a12c454e9782",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_tuple = (5, 6, 7)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "ef0e66f8-728b-4588-be63-aeda22abe6ef",
   "metadata": {},
   "outputs": [],
   "source": [
    "a, b, c = my_tuple"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "65e4ec42-83f3-4794-a8d4-1a014a1a0d9c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5"
      ]
     },
     "execution_count": 70,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "a"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "c5d7fc1b-829e-409d-b991-6c2fc42a6fbb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6"
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "b"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "12fda73e-16b1-4e64-8960-e590f3aa9d11",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "7"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "id": "9b483621-600c-4d9a-a940-77743f0ec47b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2 5 6 9 11 12 14 16 19 20 22 23 24 25 26 31 32 34 "
     ]
    }
   ],
   "source": [
    "seq = 'UACUACGAUCAGGACUGAUCGACGCGCUAUACGACUA'\n",
    "\n",
    "for i, base in enumerate(seq):\n",
    "    if base in 'GCgc':\n",
    "        print(i, end=' ')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "94910ea0-afc5-4177-ae44-7debcc9541b8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "37"
      ]
     },
     "execution_count": 75,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(seq)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "d8847189-3c93-4ce1-8ee9-302592d26366",
   "metadata": {},
   "outputs": [],
   "source": [
    "my_integers = [1, 2, 3, 4, 5]\n",
    "\n",
    "for i in range(len(my_integers)):\n",
    "    my_integers[i] *= 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "00af6e15-ecce-402c-bb70-89ece2685040",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[2, 4, 6, 8, 10]"
      ]
     },
     "execution_count": 86,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_integers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "22b0d933-99b2-4389-9653-1882ca6d2a70",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0, 1, 2, 3, 4]"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "list(range(5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "aefb5663-c2e9-45d9-a594-3ad5f85f871a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "23 Acosta MF\n",
      "3 Murillo D\n",
      "11 Bale F\n"
     ]
    }
   ],
   "source": [
    "names = ('Acosta', 'Murillo', 'Bale')\n",
    "positions = ('MF', 'D', 'F')\n",
    "numbers = (23, 3, 11)\n",
    "\n",
    "for num, pos, name in zip(numbers, positions, names):\n",
    "    print(num, name, pos)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "3d044c33-d318-4069-b9e2-4bc1953fea30",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10\n",
      "9\n",
      "8\n",
      "7\n",
      "6\n",
      "5\n",
      "4\n",
      "3\n",
      "2\n",
      "1\n",
      "ignition\n"
     ]
    }
   ],
   "source": [
    "count_up = ('ignition', 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)\n",
    "\n",
    "for count in reversed(count_up):\n",
    "    print(count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "2b281a56-ba37-4052-98cf-3d80bdc6067a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Didn't find codon.\n"
     ]
    }
   ],
   "source": [
    "seq = 'UAGUACUACUAGUAUGAUGCCAUCCCUA'\n",
    "codon = 'GGG'\n",
    "\n",
    "i = 0\n",
    "\n",
    "while seq[i:i+3] != codon and i < len(seq):\n",
    "    i += 1\n",
    "\n",
    "if i == len(seq):\n",
    "    print(\"Didn't find codon.\")\n",
    "else:\n",
    "    print('The index of the codon is', i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "bc2a2d22-4792-4d7d-a9fa-58089b71862b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "''"
      ]
     },
     "execution_count": 96,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "seq[100:103]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "cf51940d-8b3e-4093-b7f0-93f65e8568cd",
   "metadata": {},
   "outputs": [],
   "source": [
    "def ratio(x, y):\n",
    "    \"\"\"The ratio of `x` to `y`.\"\"\"\n",
    "    return x / y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "id": "1c530201-d085-418d-beb7-7008767a82d8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2.0"
      ]
     },
     "execution_count": 102,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ratio(4, 2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "56d1184f-7d81-46e8-9724-25e82942fb4a",
   "metadata": {},
   "outputs": [],
   "source": [
    "def answer_to_the_ultimate_question_of_life_the_universe_and_everything():\n",
    "    \"\"\"Simpler program that Deep Thgouth's, I bet.\"\"\"\n",
    "    return 42"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "5f5b7b87-3e5e-4fd9-9388-a2277727bea0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "42"
      ]
     },
     "execution_count": 104,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "answer_to_the_ultimate_question_of_life_the_universe_and_everything()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 105,
   "id": "7ebfe2da-794f-4f7d-bc4a-853b9bfe9dff",
   "metadata": {},
   "outputs": [],
   "source": [
    "def think_too_much():\n",
    "    \"\"\"Express Caesar's skepticism about Cassius.\"\"\"\n",
    "    print(\"\"\"Yond Cassius has a lean and hungry look,\n",
    "He thinks too much; such men are dangerous.\"\"\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 111,
   "id": "4a845090-18fa-4061-8ac0-13265c89d6c7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Yond Cassius has a lean and hungry look,\n",
      "He thinks too much; such men are dangerous.\n"
     ]
    }
   ],
   "source": [
    "return_val = think_too_much()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "id": "ff8400ab-90e5-48fe-88b5-1748fe6de5b9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "None\n"
     ]
    }
   ],
   "source": [
    "print(return_val)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 107,
   "id": "32001416-baec-4017-ab83-8958f3477521",
   "metadata": {},
   "outputs": [],
   "source": [
    "def evens_up_to_8():\n",
    "    return 2, 4, 6, 8"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 115,
   "id": "ee7d4cb5-ec8c-433b-a2bb-0b67ad192c68",
   "metadata": {},
   "outputs": [],
   "source": [
    "a, b, c, d = evens_up_to_8()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "id": "f19293e5-c7a8-400b-98bb-64ad1e2ce880",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6"
      ]
     },
     "execution_count": 117,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "c"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "f6afd3c7-4b51-40a8-9425-125715b71aef",
   "metadata": {},
   "outputs": [],
   "source": [
    "def complement_base(base, material='DNA'):\n",
    "    \"\"\"Return the Watson-Crick complement of a base.\"\"\"\n",
    "    if base in 'Aa':\n",
    "        if material == 'DNA':\n",
    "            return 'T'\n",
    "        elif material == 'RNA':\n",
    "            return 'U'\n",
    "    elif base in 'TtUu':\n",
    "        return 'A'\n",
    "    elif base in 'Gg':\n",
    "        return 'C'\n",
    "    elif base in 'Cc':\n",
    "        return 'G'\n",
    "    else:\n",
    "        return ''\n",
    "        \n",
    "\n",
    "def reverse_complement(seq, material='DNA'):\n",
    "    \"\"\"Compute the reverse of a sequence.\"\"\"\n",
    "    # Initialize the rev comp\n",
    "    rev_seq = ''\n",
    "\n",
    "    # Loop through in reverse and add each base\n",
    "    for base in reversed(seq):\n",
    "        rev_seq += complement_base(base, material)\n",
    "\n",
    "    return rev_seq"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "f8cf4dac-15c3-4f0c-828c-d946c3252023",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'UGCAACUGC'"
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "reverse_complement(seq='GCAGUUGCA', material='RNA')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "a1ba54ff-3540-41de-982e-4f036f756f40",
   "metadata": {},
   "outputs": [],
   "source": [
    "def is_almost_right(a, b, c):\n",
    "    \"\"\"Check to see if a triangle with side lengths a, b, and c is right.\"\"\"\n",
    "    # Use sorted() to make sure c is largest\n",
    "    a, b, c = sorted([a, b, c])\n",
    "\n",
    "    if abs(a**2 + b**2 - c**2) < 1e-12:\n",
    "        return True\n",
    "    else:\n",
    "        return False\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "id": "f53c0101-24a9-4e2c-b48a-0adb803aed11",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 143,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "is_almost_right(5, 12, 13)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "75bb3a9f-fba8-4e7d-b953-80053c1a6058",
   "metadata": {},
   "outputs": [],
   "source": [
    "side_lengths = (5, 12, 13)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "id": "8f51234e-ba43-4813-b193-3ecc349076c3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 146,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "is_almost_right(*side_lengths) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "id": "922cf9d8-4ee2-406c-aedc-a9411993e5d2",
   "metadata": {},
   "outputs": [],
   "source": [
    "def ratio(x, y):\n",
    "    \"\"\"ratio\"\"\"\n",
    "    return x / y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "id": "88a7cd90-bd44-434e-8007-f46c42cf583b",
   "metadata": {},
   "outputs": [],
   "source": [
    "ratio = lambda x, y: x / y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 149,
   "id": "b4d7b4a8-eaeb-4194-b7e0-68b6d11f7c32",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7142857142857143"
      ]
     },
     "execution_count": 149,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ratio(5, 7)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 157,
   "id": "d4e00fd9-5e3a-494e-aa40-ad9aa78d16be",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['Kellyn Acosta', 'Gareth Bale', 'Jesus Murillo']"
      ]
     },
     "execution_count": 157,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sorted(['Kellyn Acosta', 'Jesus Murillo', 'Gareth Bale'], key=lambda x: x[x.find(' ')+1:])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 158,
   "id": "4f2399bc-0c79-4fbd-aacf-5b9efd3d5228",
   "metadata": {},
   "outputs": [],
   "source": [
    "last_name = lambda x: x[x.find(' ')+1:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 159,
   "id": "716eb5ef-6b6a-4fc5-941a-9da9d7b49c54",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'Lebowski'"
      ]
     },
     "execution_count": 159,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "last_name(\"Jeffrey Lebowski\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "id": "e8ed68b7-de26-40bb-be4f-8225a4413650",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'.sediba eduD ehT'"
      ]
     },
     "execution_count": 161,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_str = 'The Dude abides.'\n",
    "\n",
    "my_str[::-1]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 164,
   "id": "ab1337a0-547c-44fc-bf35-33f53d2c66a4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.5428571428571428"
      ]
     },
     "execution_count": 164,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "seq = 'ATCGATCGCTTCTAGGCGATCGTACGATCGACTGC'\n",
    "\n",
    "(seq.count('G') + seq.count('C')) / len(seq)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 165,
   "id": "5172ca87-3eef-49ce-b47e-cb3b73134ab8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "6"
      ]
     },
     "execution_count": 165,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'AGTAGATACAGTATAGTAGT'.count('T')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 168,
   "id": "9eed63b7-a76b-40da-9383-34970e260126",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 168,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'AAAAAAA'.count('nonsense')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "id": "3836b019-949d-4cc5-a9bb-84b51d170136",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "25"
      ]
     },
     "execution_count": 171,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'AGATCGAGAUAGAUGATCGATCAGGGATCG'.rfind('GAT')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "id": "83e13637-347d-48c6-9b19-3239d7b25eec",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'AGTGAGATGAG'"
      ]
     },
     "execution_count": 173,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'AGTGAGATGAG'.lower().upper()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 175,
   "id": "6631a01c-da7d-4da5-9f49-ad326273601c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'The*Dude*abides.'"
      ]
     },
     "execution_count": 175,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "word_tuple = ('The', 'Dude', 'abides.')\n",
    "\n",
    "'*'.join(word_tuple)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 180,
   "id": "8df46e1f-6af7-4302-947a-88d684764f13",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "During this bootcamp, I feel tiny.\n",
      "The instructors give us flowers.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "adjective = 'tiny'\n",
    "plural_noun = 'flowers'\n",
    "\n",
    "my_str = f\"\"\"\n",
    "During this bootcamp, I feel {adjective}.\n",
    "The instructors give us {plural_noun}.\n",
    "\"\"\"\n",
    "\n",
    "print(my_str)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 182,
   "id": "2a5acfeb-2e4c-4ef8-b0fc-785c74826e79",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'There are 0050 states in the US.'"
      ]
     },
     "execution_count": 182,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'There are {n:04d} states in the US.'.format(n=50)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 184,
   "id": "c8b29be1-f827-443b-b35c-660ff5f790f9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'π is approximately 3.141593e+00'"
      ]
     },
     "execution_count": 184,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pi = 3.1415926535\n",
    "f'π is approximately {pi:.6e}'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 185,
   "id": "89d7a73b-32fe-4a3b-8fb9-e9603b3c99fe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1000000000000"
      ]
     },
     "execution_count": 185,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "1_000_000_000_000"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "6ef7922c-fda7-4e76-9c24-a365467fbd37",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
